{"version":3,"file":"static/js/198.6ba0f3a1.chunk.js","mappings":"uIACA,QAAmC,sCAAnC,EAAqF,+B,uBCCrF,MAqCA,EArCgCA,IAC5B,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAW,KACPD,EAAUL,EAAMI,OAAO,GACxB,CAACJ,EAAMI,SAeV,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACMP,IACEQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,QAAMC,cAjBGC,KACrBT,GAAY,EAAK,EAgBiCM,SAAER,EAAMI,QAAU,gBAG/DH,IACGQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOG,SAbCC,IACpBR,EAAUQ,EAAEC,cAAcC,MAAM,EAYaC,WAAW,EAAMC,OAlBvCC,KACvBhB,GAAY,GACZF,EAAMmB,aAAaf,EAAO,EAgBgEW,MAAOX,QAG3F,E,cC5Bd,MA+BA,EA/BoBgB,IAA4D,IAA3D,QAAEC,EAAO,OAAEjB,EAAM,aAAEe,EAAY,QAAEG,EAAO,UAAEC,GAAWH,EACtE,IAAKC,EACD,OAAOZ,EAAAA,EAAAA,KAACe,EAAAA,EAAS,IASrB,OACIf,EAAAA,EAAAA,KAAA,OAAAD,UACID,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAmBlB,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKkB,IAAI,gDACTlB,EAAAA,EAAAA,KAAA,OAAKkB,IAAKN,EAAQO,OAAOC,OAASC,EAAWL,UAAWC,IACvDJ,IAAWb,EAAAA,EAAAA,KAAA,SAAOsB,KAAM,OAAQnB,SAXhBC,IACrBA,EAAEmB,OAAOC,MAAMC,QACfX,EAAUV,EAAEmB,OAAOC,MAAM,GAC7B,KASQxB,EAAAA,EAAAA,KAAC0B,EAAsB,CAAC/B,OAAQA,EAAQe,aAAcA,KAEtDV,EAAAA,EAAAA,KAAA,OAAAD,SAAMa,EAAQe,YACd3B,EAAAA,EAAAA,KAAA,OAAAD,SAAMa,EAAQgB,WACd5B,EAAAA,EAAAA,KAAA,KAAG6B,KAAMjB,EAAQkB,SAASC,QAASR,OAAQ,SAASxB,SAAC,MACpDa,EAAQoB,gBACThC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,wBACLC,EAAAA,EAAAA,KAAA,OAAAD,SAAMa,EAAQqB,gCAGhB,E,cCjCd,QAAuB,mBCgBvB,EAZc1C,IAENO,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAOlB,SAAA,EACdC,EAAAA,EAAAA,KAAA,OAAKkB,IAAK3B,EAAM2C,MAChB3C,EAAM4C,SACXrC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKR,EAAM6C,WAAW,eCVlC,EAA0B,yB,2CCU1B,MAAMC,GAAcC,EAAAA,EAAAA,IAAiB,IAiB/BC,GAAgBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,eAAjBD,EAdJjD,IAEVS,EAAAA,EAAAA,KAAA,OAAAD,UACID,EAAAA,EAAAA,MAAA,QAAM4C,SAAUnD,EAAMoD,aAAa5C,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,KAAM,cAAeC,YAAa,YACvDC,SAAU,CAACC,EAAAA,GAAUb,QAEhCrC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,oBA2BxB,EAlBgBoD,EAAAA,MAAW5D,IACvB,IAAI6D,EAAe7D,EAAM8D,MAAMC,KAAIC,IAAKvD,EAAAA,EAAAA,KAACwD,EAAI,CAACtB,IAAKqB,EAAErB,IAAKC,QAASoB,EAAEpB,QAASC,WAAYmB,EAAEnB,eAM5F,OACItC,EAAAA,EAAAA,MAAA,OAAKkB,UAAWC,EAAUlB,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAACuC,EAAa,CAACG,SAPNe,IACblE,EAAMmE,QAAQD,EAASE,YAAY,KAO/B3D,EAAAA,EAAAA,KAAA,OAAAD,SACKqD,MAEH,I,cCzBd,MAEA,GAFyBQ,EAAAA,EAAAA,KAdFC,IACZ,CACHR,MAAOQ,EAAMC,YAAYT,MACzBM,YAAaE,EAAMC,YAAYH,gBAGbI,IACf,CACHL,QAAUC,IACNI,GAASC,EAAAA,EAAAA,IAAqBL,GAAa,KAK9BC,CAA6CK,GCDtE,EAbiB1E,IAETO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACkE,EAAW,CAACpD,UAAWvB,EAAMuB,UAC1BD,QAAStB,EAAMsB,QACfD,QAASrB,EAAMqB,QACfjB,OAAQJ,EAAMI,OACde,aAAcnB,EAAMmB,gBACxBV,EAAAA,EAAAA,KAACmE,EAAgB,O,sBCL7B,MAAMC,UAAyBjB,EAAAA,UAE3BkB,cAAAA,GACI,IAAIC,EAASC,KAAKhF,MAAMiF,MAAMC,OAAOH,OACjCA,IACAA,EAASC,KAAKhF,MAAMmF,kBAKxBH,KAAKhF,MAAMoF,eAAeL,GAC1BC,KAAKhF,MAAMqF,UAAUN,EACzB,CAEAO,iBAAAA,GACIN,KAAKF,gBACT,CAEAS,kBAAAA,CAAmBC,EAAWC,EAAWC,GACjCV,KAAKhF,MAAMiF,MAAMC,OAAOH,QAAUS,EAAUP,MAAMC,OAAOH,QAC7DC,KAAKF,gBAET,CAEAa,MAAAA,GAEI,OACIlF,EAAAA,EAAAA,KAACmF,EAAO,IAAKZ,KAAKhF,MACTsB,SAAU0D,KAAKhF,MAAMiF,MAAMC,OAAOH,OAClC1D,QAAS2D,KAAKhF,MAAMqB,QACpBjB,OAAQ4E,KAAKhF,MAAMI,OACnBe,aAAc6D,KAAKhF,MAAMmB,aACzBI,UAAWyD,KAAKhF,MAAMuB,WAGvC,EAaJ,SAAesE,EAAAA,EAAAA,KACXxB,EAAAA,EAAAA,KAVmBC,IACX,CACJjD,QAASiD,EAAMC,YAAYlD,QAC3BjB,OAAQkE,EAAMC,YAAYnE,OAC1B+E,iBAAkBb,EAAMwB,KAAKf,OAC7BgB,OAAQzB,EAAMwB,KAAKC,UAKE,CAACX,eAAc,KAAEC,UAAS,KAAElE,aAAY,KAAEI,UAAS,OAC5EyE,EAAAA,GAFJ,CAIEnB,E","sources":["webpack://peep/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","webpack://peep/./src/components/profile/myPosts/post/Post.module.css?fa80","components/profile/myPosts/post/Post.jsx","webpack://peep/./src/components/profile/myPosts/MyPosts.module.css?000b","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__n51iN\",\"userPhoto\":\"ProfileInfo_userPhoto__vrpo7\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport c from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/userPhoto.png';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={c.descriptionBlock}>\r\n                <img src='https://wallpapercave.com/wp/wp2461898.jpg' />\r\n                <img src={profile.photos.large || userPhoto} className={c.userPhoto} />\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n               \r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <a href={profile.contacts.twitter} target={\"_blank\"}>X</a>\r\n                {profile.lookingForAJob}\r\n                <div>I'm open for a job</div>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__4mLt8\"};","import React from \"react\";\r\nimport c from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={c.post}>\r\n                 <img src={props.ava}/>\r\n                {props.message}\r\n            <div>\r\n                {props.likesCount} likes\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"myposts\":\"MyPosts_myposts__xFj9P\"};","import React from \"react\";\r\nimport Post from \"./post/Post\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formsControls/FormsControls\";\r\n\r\n\r\n{/*value={props.newPostText} ref={newPostElement}*/\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea} name={\"newPostText\"} placeholder={\"type text\"}\r\n                           validate={[required, maxLength10]}/>\r\n                </div>\r\n                <button>Add post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'newPostText'})(PostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map(p => <Post ava={p.ava} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.myposts}>\r\n            <h3>My Posts</h3>\r\n            <PostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n  /*          if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n    */    }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}   \r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n//    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","_ref","profile","isOwner","savePhoto","Preloader","className","c","src","photos","large","userPhoto","type","target","files","length","ProfileStatusWithHooks","fullName","aboutMe","href","contacts","twitter","lookingForAJob","lookingForAJobDescription","ava","message","likesCount","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","React","postsElement","posts","map","p","Post","formData","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","refreshProfile","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","compose","auth","isAuth","withRouter"],"sourceRoot":""}