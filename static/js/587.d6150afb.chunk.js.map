{"version":3,"file":"static/js/587.d6150afb.chunk.js","mappings":"iJACA,QAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAA6I,uBAA7I,EAA6K,wBCA7K,EAAyB,uB,uBCIzB,MAYA,EAZgBA,IAEZ,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACrBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAIR,EAAKK,SAAA,CAAC,KAACH,EAAAA,EAAAA,KAAA,OAAKO,IAAKV,EAAMW,MAAM,IAAEX,EAAMY,SAChD,ECXd,EAAyB,wBCczB,EAXiBZ,IAITG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,SACpBN,EAAMa,U,qDCAnB,MAAMC,GAAcC,EAAAA,EAAAA,IAAiB,IAc/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,oBAAjBD,EAZJjB,IAEbG,EAAAA,EAAAA,KAAA,OAAAG,UACIC,EAAAA,EAAAA,MAAA,QAAMY,SAAUnB,EAAMoB,aAAad,SAAA,EAC/BH,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUX,KAAM,iBAAkBY,YAAa,qBAC1DC,SAAU,CAACC,EAAAA,GAAUZ,MAC5BX,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,wBA0CxB,EAlCiBN,IACb,IAAI2B,EAAiB3B,EAAM4B,YAAYC,QAAQC,KAAIC,IAAK5B,EAAAA,EAAAA,KAAC6B,EAAM,CAAYrB,IAAKoB,EAAEpB,IAAKC,KAAMmB,EAAEnB,KAAMV,GAAI6B,EAAE7B,IAAtC6B,EAAE7B,MACnE+B,EAAiBjC,EAAM4B,YAAYM,SAASJ,KAAIK,IAAKhC,EAAAA,EAAAA,KAACiC,EAAO,CAAYvB,QAASsB,EAAEtB,SAAjBsB,EAAEjC,MAKzE,IAAKF,EAAMqC,OAAQ,OAAOlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAAC7B,GAAI,WAOxC,OACIF,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1BqB,KAELpB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAWC,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAQC,SAAA,EACpBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2B,KACN9B,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACa,EAAgB,CAACG,SAdfoB,IACnBC,QAAQC,IAAIF,GACZvC,EAAM0C,YAAYH,EAASI,eAAe,UAelCxC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACrBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2B,WAGZ,E,cCnDd,IAAIW,EAA8BC,IAAK,CACnCR,OAAQQ,EAAMC,KAAKT,SCevB,SAAeU,E,MAAAA,KACXC,EAAAA,EAAAA,KAdmBH,IACZ,CACHjB,YAAaiB,EAAMjB,gBAGDqB,IACf,CACHP,YAAcC,IACVM,GAASC,EAAAA,EAAAA,GAAmBP,GAAgB,ODPvBQ,IAC7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKvD,MAAMqC,QAETlC,EAAAA,EAAAA,KAACgD,EAAS,IAAKI,KAAKvD,SAFIG,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAAC7B,GAAG,UAGhD,EAQJ,OALiCuC,EAAAA,EAAAA,IAAQJ,EAARI,CAAoCI,EAKhC,GCFzC,CAGEI,E","sources":["webpack://peep/./src/components/dialogs/Dialogs.module.css?04a9","webpack://peep/./src/components/dialogs/dialog/Dialog.module.css?954a","components/dialogs/dialog/Dialog.jsx","webpack://peep/./src/components/dialogs/dialog/messages/Message.module.css?e185","components/dialogs/dialog/messages/Message.jsx","components/dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__h66Qh\",\"dialogsItems\":\"Dialogs_dialogsItems__BzVOF\",\"messages\":\"Dialogs_messages__db-gs\",\"first\":\"Dialogs_first__d9vR9\",\"second\":\"Dialogs_second__4iybn\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__JRmQM\"};","import React from \"react\";\r\nimport c from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Dialog = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <NavLink to={path}> <img src={props.ava}/> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialog;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__LWHxi\"};","import React from \"react\";\r\nimport c from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport c from './Dialogs.module.css'\r\nimport Dialog from \"./dialog/Dialog\";\r\nimport Message from \"./dialog/messages/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder={\"Enter your message\"}\r\n                       validate={[required, maxLength20]}/>\r\n                <button>Send message</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({form: 'dialogAddMessage'})(MessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement = props.dialogsPage.dialogs.map(d => <Dialog key={d.id} ava={d.ava} name={d.name} id={d.id}/>);\r\n    let messageElement = props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n   /* let newMessageBody = props.dialogsPage.newMessageBody;\r\n    let newMessageElement = React.createRef()\r\n    }*/\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    const addNewMessage = (formData) => {\r\n        console.log(formData);\r\n        props.sendMessage(formData.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogsItems}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={c.messages}>\r\n                <div className={c.first}>\r\n                    <div>{messageElement}</div>\r\n                    <div>\r\n                        <MessageReduxForm onSubmit={addNewMessage}/>\r\n                    </div>\r\n                </div>\r\n                <div className={c.second}>\r\n                    <div>{messageElement}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n"],"names":["props","path","id","_jsx","className","c","children","_jsxs","NavLink","to","src","ava","name","message","maxLength20","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElement","dialogsPage","dialogs","map","d","Dialog","messageElement","messages","m","Message","isAuth","Redirect","formData","console","log","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","React","render","this","Dialogs"],"sourceRoot":""}