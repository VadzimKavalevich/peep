{"version":3,"file":"static/js/945.70c11c28.chunk.js","mappings":"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","sources":["webpack://peep/./src/components/profile/profileInfo/ProfileInfo.module.css?df08","components/profile/profileInfo/ProfileStatus.jsx","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","webpack://peep/./src/components/profile/myPosts/post/Post.module.css?fa80","components/profile/myPosts/post/Post.jsx","webpack://peep/./src/components/profile/myPosts/MyPosts.module.css?000b","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__n51iN\",\"userPhoto\":\"ProfileInfo_userPhoto__vrpo7\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"No status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport c from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <img src='https://wallpapercave.com/wp/wp2461898.jpg'/>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div className={c.descriptionBlock}>\r\n                <img className={c.userPhoto} src={profile.photos.large} />\r\n                <div>{profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <a href={profile.contacts.twitter} target={\"_blank\"}>X</a>\r\n                {profile.lookingForAJob}\r\n                <div>I'm open for a job</div>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__4mLt8\"};","import React from \"react\";\r\nimport c from './Post.module.css'\r\n\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={c.post}>\r\n                 <img src={props.ava}/>\r\n                {props.message}\r\n            <div>\r\n                {props.likesCount} likes\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"myposts\":\"MyPosts_myposts__xFj9P\"};","import React from \"react\";\r\nimport Post from \"./post/Post\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formsControls/FormsControls\";\r\n\r\n\r\n{/*value={props.newPostText} ref={newPostElement}*/\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea} name={\"newPostText\"} placeholder={\"type text\"}\r\n                           validate={[required, maxLength10]}/>\r\n                </div>\r\n                <button>Add post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({form: 'newPostText'})(PostForm);\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElement = props.posts.map(p => <Post ava={p.ava} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (formData) => {\r\n        props.addPost(formData.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={c.myposts}>\r\n            <h3>My Posts</h3>\r\n            <PostReduxForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n  /*          if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n    */    }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n//    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n"],"names":["React","props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","_ref","profile","src","ProfileStatusWithHooks","className","c","photos","large","fullName","aboutMe","href","contacts","twitter","target","lookingForAJob","lookingForAJobDescription","Preloader","ava","message","likesCount","maxLength10","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","postsElement","posts","map","p","Post","formData","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","componentDidMount","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","render","Profile","compose","auth","isAuth","withRouter"],"sourceRoot":""}